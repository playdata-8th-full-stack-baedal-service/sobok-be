server:
  port: 8000

spring:
  application:
    name: gateway-service

  config:
    import: optional:configserver:http://localhost:8888

  cloud:
    gateway:
      globalcors:
        cors-configurations:
          # 모든 경로에 대한 CORS 설정을 시작하겠다.
          "[/**]":
            # 허용 주소
            allowed-origins:
              - "http://localhost:5173" # 로컬 개발용

            # 허용 요청 방식
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - PATCH
              - OPTIONS

            # 허용 헤더
            allowed-headers:
              - Content-Type
              - Authorization
              - X-Requested-With  # AJAX 요청임을 표시

            # 인증 정보 포함 요청을 허용하겠다.
            allow-credentials: true

      default-filters:
        # CORS 확인 필터
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
        - name: AuthorizationFilter

      routes:
        - id: auth-service
          uri: lb://AUTH-SERVICE
          predicates:
            - Path=/auth-service/auth/**
            - Path=/auth-service/sms/**
          filters:
            - RewritePath=/auth-service/(?<segment>.*), /$\{segment}
            - name: AuthorizationFilter

        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/user/**
          filters:
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - name: AuthorizationFilter

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.instance_id:${random.value}}
